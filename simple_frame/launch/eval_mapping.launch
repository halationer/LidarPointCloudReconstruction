<?xml version="1.0"?>
<!--
Software License Agreement (BSD)

\file      mapping.launch
\authors   Pengdi Huang <alualu628628@163.com>
\copyright Copyright (c) 2022, 05, All rights reserved.


THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<launch>
    <arg name="rosbag" default="$(find frame_reconstruction)/../data/nsh_indoor_outdoor.bag" />
    <arg name="gtpos" default="$(find frame_reconstruction)/../data/nsh_indoor_outdoor_pos.txt" />
    <arg name="jump" default="0" />
    <arg name="sample" default="1" />
    <arg name="delay" default="1.0" />

    <!-- output evaluation files (point cloud and mesh )-->
    <arg name="sf_output_path" default=""/>
    <param name="sf_output_path" type="string" value="$(arg sf_output_path)" />
    <arg name="mf_output_path" default=""/>
    <arg name="dy_output_path" default=""/>

    <!--Use simulated time to prevent the public time of the TF structure from being unable to match with other messages-->
    <param name="use_sim_time" value="true"/>

    <!-- use eval node -->
    <include file="$(find aloam_velodyne)/launch/eval_velodyne.launch" >
        <arg name="eval_pose_file" value="$(arg gtpos)" />
        <arg name="bag_file" value="$(arg rosbag)" />
        <arg name="jump_frame" value="$(arg jump)" />
        <arg name="publish_delay" value="$(arg delay)" />
        <arg name="sample_frame" value="$(arg sample)" />
    </include>
    <!-- <node pkg="tf" type="static_transform_publisher" name="camera_init_to_map"  args="0 0 0 0 0 0 /map /camera_init 10" /> -->

    <!-- SLAM transfer -->
    <include file="$(find slam_trans)/launch/SLAM_to_map.launch"/>

    <!-- launch frame reconstruction-->
    <include file="$(find simple_frame)/launch/reconstruction.launch"/>

    <!-- launch frame fusion-->
    <include file="$(find hash_fusion)/launch/fusion.launch" >
        <arg name="dy_output_path" value="$(arg dy_output_path)"/>
    </include>

    <include file="$(find frames_fusion)/launch/fusion.launch" >
        <arg name="mf_output_path" value="$(arg mf_output_path)" />
    </include>

</launch>


